__NUXT_JSONP__("/thoughts/from-problem-to-plugin", {data:[{page:{title:"From problem to plugin",content:"\u003Ch3\u003EBackground&nbsp;\u003C\u002Fh3\u003E\u003Cp\u003EAs I&#39;ve mentioned before, I&#39;ve long had a passion for learning new skills and that&#39;s especially true when it comes to picking up new frontend development skills.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EWhen I started learning \u003Ca href=\"https:\u002F\u002Fwww.vuejs.org\u002F\" target=\"_blank\"\u003EVue\u003C\u002Fa\u003E, I chose to utilise the \u003Ca href=\"https:\u002F\u002Fwww.vuetifyjs.com\u002F\" target=\"_blank\"\u003EVuetify\u003C\u002Fa\u003E library to speed up the process and allow me to focus less on creating CSS and more on learning the necessary JavaScript and language specifics. Using the Vuetify library taught me the basics of working with APIs to leverage specific behaviour.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EWhen I moved over to using \u003Ca href=\"https:\u002F\u002Fwww.figma.com\u002F\" target=\"_blank\"\u003EFigma\u003C\u002Fa\u003E as my main design tool outside of my day job, I wanted to find ways to make the process of handing over to development easier. Although Figma does a great job of handling \u003Ca href=\"https:\u002F\u002Fwww.figma.com\u002Fbest-practices\u002Fguide-to-developer-handoff\u002F\" target=\"_blank\"\u003Edeveloper handoff\u003C\u002Fa\u003E, it renders the font sizes as pixels much like any other design tool does.&nbsp;\u003C\u002Fp\u003E\u003Ch3\u003EThe solution&nbsp;\u003C\u002Fh3\u003E\u003Cp\u003EI was desperate to have an easier way to provide the relevant Rem or Em values to developers (including myself) so that I didn&#39;t have to find an online converter or just make up random values to try and find the closest match. And that&#39;s how \u003Ca href=\"https:\u002F\u002Fwww.figma.com\u002Fcommunity\u002Fplugin\u002F837070613195594890\u002FPx-%E2%80%BA%E2%80%BA-Em\" target=\"_blank\"\u003EPx &rsaquo;&rsaquo; Em\u003C\u002Fa\u003E was born.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EOver one evening, I was able to dig into the \u003Ca href=\"https:\u002F\u002Fwww.figma.com\u002Fplugin-docs\u002Fapi\u002Fapi-overview\" target=\"_blank\"\u003EFigma API documentation\u003C\u002Fa\u003E, make sense of what was possible and create a basic proof of concept that did what I needed it to do.&nbsp;\u003C\u002Fp\u003E\u003Ch3\u003EThe final output&nbsp;\u003C\u002Fh3\u003E\u003Cp\u003EOver the course of the following few days, I made adjustments and updates to the plugin, enabling some extra functionality for changing the base Px value from the browser default of 16px and also allowing for the conversion ratio to be changed based on\r\nsome common scales (including the Golden Ratio).&nbsp;\u003C\u002Fp\u003E\u003Ch4\u003EThe core Px &rsaquo;&rsaquo; Em functionality is:\u003C\u002Fh4\u003E\u003Cul class=\"list-disc ml-8\"\u003E\u003Cli\u003EOpen the plugin without selections to convert any number to ems\u003C\u002Fli\u003E\u003Cli\u003ESelect a text node anywhere in your files and open the plugin to see the current pixel value and convert it to ems\u003C\u002Fli\u003E\u003Cli\u003EChange the current selection to update the input value and enable a new conversion\u003C\u002Fli\u003E\u003Cli\u003EChange the baseline px value to whatever you want it to be and see the relevant changes in em conversion\u003C\u002Fli\u003E\u003Cli\u003EChange the scale by which you want to convert based on common scales used\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003ECreating the code wasn&#39;t as complex as first anticipated, so here&#39;s a snippet of how the actual calculation works as a function.\u003C\u002Fp\u003E\u003Cdiv class=\"w-3\u002F4 overflow-x-auto whitespace-pre-wrap\"\u003E\u003Cpre class=\" rounded-xl  language-javascript\"\u003E\u003Ccode class=\"  language-javascript\"\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EpxToEms\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epx\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E \u003Cspan class=\"token keyword\"\u003Evar\u003C\u002Fspan\u003E baseValue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E  \u003C\u002Fcode\u003E\u003Ccode class=\"  language-javascript\"\u003Edocument\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E   \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EgetElementById\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E&#39;newPx&#39;\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E   \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E \u003Cspan class=\"token keyword\"\u003Evar\u003C\u002Fspan\u003E scale \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E  \u003C\u002Fcode\u003E\u003Ccode class=\"  language-javascript\"\u003Edocument\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E   \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EgetElementById\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E&#39;scale&#39;\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E   \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ecalculate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epx \u003Cspan class=\"token operator\"\u003E\u002F\u003C\u002Fspan\u003E baseValue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E*\u003C\u002Fspan\u003E scale\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E calculate\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\r\n\u003Ccode class=\"  language-javascript\"\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E",metadata:{title:"",hero:{url:"https:\u002F\u002Fcdn.cosmicjs.com\u002F2d2992c0-b581-11eb-b5b6-fd115d17c053-From-problem-to-plugin2x.png",imgix_url:"https:\u002F\u002Fimgix.cosmicjs.com\u002F2d2992c0-b581-11eb-b5b6-fd115d17c053-From-problem-to-plugin2x.png"},published:"2020-05-16",snippet:"Learning Typescript, the Figma API and solving a real personal problem.",tag:"development",latest:false},modified_at:"2021-05-15T13:26:48.856Z",order:"13",__typename:"Object"}}],fetch:[],mutations:[]});